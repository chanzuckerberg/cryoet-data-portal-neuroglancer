[project]
name = "cryoet-data-portal-neuroglancer"
version = "1.4.2" # x-release-please-version
description = "Utility package for working with Neuroglancer data in the CZI Cryo-ET Data Portal"
authors = [
    {name="CZI Imaging Team",  email="cryoetdataportal@chanzuckerberg.com"},
    {name="Sean Martin"},
    {name="Vincent Aranega"},
]
license = "MIT"
readme = "README.md"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Programming Language :: Python :: 3.11",
]
packages = [
    { include = "cryoet_data_portal_neuroglancer", from = "." },
]
repository = "https://github.com/chanzuckerberg/cryoet-data-portal-neuroglancer"

[tool.poetry]
name = "cryoet-data-portal-neuroglancer"
version = "1.4.2" # x-release-please-version
description = "Utility package for working with Neuroglancer data in the CZI Cryo-ET Data Portal"
authors = [
    "CZI Imaging Team <cryoetdataportal@chanzuckerberg.com>",
    "Sean Martin",
    "Vincent Aranega",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.11"
zarr = "^2.18.2"
ome-zarr = "0.9.0"
neuroglancer = "^2.40.1"
cloud-files = "4.27.0"
tqdm = "^4.66.5"
ndjson = "^0.3.1"
scikit-learn = "^1.5.1"
cloud-volume = "10.5.0"
igneous-pipeline = { git = "https://github.com/metacell/igneous.git", tag = "patchv1.0"}
kimimaro = "4.1.2"
numpy = "<2.0.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
ruff = "^0.6.2"
pre-commit = "^3.8.0"
pytest-cov = "^5.0.0"
mypy = "^1.11.2"

[tool.black]
line-length = 120
target_version = ['py311']

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "E", "W",  # pycodestyle
    "F",  # pyflakes
    "B",  # bugbear
    "I",  # isort
    "N",  # pep8-naming
    "ASYNC",  # async
    "COM",  # commas
    "C4",  # comprehensions
    "DTZ",  # datetimez
    "ISC",  # implicit-str-concat
    "G",  # logging-format
    "T20",  # print
    "SIM",  # simplify
]
ignore = [
    "E501",  # line too long
    "C408",  # rewrite empty built-ins as literals
    "T201",  # print statements.
]

[tool.ruff.lint.isort]
known-first-party =["common"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.mypy]
show_error_codes = true
ignore_missing_imports = true
warn_unreachable = true
strict = true
